- name: Set up Kubernetes cluster
  hosts: all
  become: true
  tasks:
    - name: Disable swab
      command: swapoff -a
    - name: Remove swap entry from /etc/fstab
      replace:
        path: /etc/fstab
        regexp: '(^.*swap.*$)'
        replace: '#\1'
    - name: Install required packages
      apt:
        name: 
          - apt-transport-https
          - ca-certificates 
          - curl 
          - gnupg
          - lsb-release
          - socat
        state: present
    - name: Add Kubernetes GPG key
      apt_key:
        url: https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key
        state: present
        keyring: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    - name: Add Kubernetes repository
      apt_repository:
        repo: deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /
        state: present 
    - name: Install Kubernetes components
      apt:
        name: 
          - kubelet
          - kubeadm
          - kubectl
        state: present
        update_cache: yes
    - name: Install containerd
      apt:
       name: containerd
       state: present
    - name: Create containerd configuration directory
      file:
        path: /etc/containerd
        state: directory
    - name: Genererate defaultl containerd configuration
      shell: |
        rm -f /etc/containerd/config.toml
        containerd config default > /etc/containerd/config.toml
    - name: Configure containerd to use systemd as cgroup driver
      replace:
        path: /etc/containerd/config.toml
        regexp: 'SystemdCgroup = false'
        replace: 'SystemdCgroup = true'
    - name: Restart containerd service
      service:
        name: containerd
        state: restarted 
        enabled: yes
- name: Initialize Kubernetes master node
  hosts: master
  become: true
  tasks:
    - name: Check if kubeadm init has been run
      stat:
        path: /etc/kubernetes/admin.conf
      register: kubeadm_init_check
    - name: Initialize Kubernetes master node
      command: kubeadm init --pod-network-cidr=192.168.0.0/16 --ignore-preflight-errors=FileContent--proc-sys-net-bridge-bridge-nf-call-iptables
      register: init_output
      when: kubeadm_init_check.stat.exists == false
    - name: Create .kube directory
      file:
        path: /root/.kube
        state: directory
        mode: '0755'
    - name: Copy Kubernetes configuration file
      command: "{{ item }}"
      with_items:
        - cp -i /etc/kubernetes/admin.conf ~/.kube/config
    - name: Save the join command to a file
      copy:
        content: "{{ init_output.stdout }}"
        dest: /root/join_command.txt
- name: Join worker nodes to the cluster
  hosts: workers
  become: true
  tasks:
    - name: Fetch join command from master
      command: cat /root/join_command.txt
      delegate_to: master
      register: join_command
    - name: Join worker nodes to the Kubernetes cluster
      command: "{{ join_command.stdout }}"
...
    