# Default values for yamp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 2
image:
  pullPolicy: Always
  tag: "pr-latest"

imagePullSecrets:
  name: ghcr-secret
nameOverride: ""
spring:
  profiles:
      active: pre-prod
resources:
   limits:
     cpu: 1024m
     memory: 1024Mi
   requests:
     cpu: 512m
     memory: 512Mi
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80


redis:
  url: redis://redis-svc:6379
kafka:
  producerURL: kafka-svc-controller-headless:9092
  consumerURL: kafka-svc:9092
yamp:
  authsvc:
    repo: ghcr.io/ngodat0103/yamp/auth-svc
    datasourceUrl: jdbc:postgresql://share-db:5432/auth-svc-db
  usersvc:
    repo: ghcr.io/ngodat0103/yamp/user-svc
    datasourceUrl: jdbc:postgresql://share-db:5432/user-svc-db
  gatewaysvc:
    repo: ghcr.io/ngodat0103/yamp/gateway-svc
  productsvc:
    repo: ghcr.io/ngodat0103/yamp/product-svc
    datasourceUrl: jdbc:postgresql://share-db:5432/product-svc-db
configmap:
  tempo: tempo-common-configmap

cloudflared:
  secretKey: CLOUDFLARED_TOKEN_STAGING

probes:
  liveness:
    initialDelaySeconds: 120
  readiness:
    initialDelaySeconds: 180
  periodSeconds: 10
  timeoutSeconds: 10
  failureThreshold: 3


# Additional volumes on the output Deployment definition.
#volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
#volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true
#nodeSelector: {}
#
#tolerations: []
#affinity: {}

#podSecurityContext: {}
# fsGroup: 2000

#securityContext: {}
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000



